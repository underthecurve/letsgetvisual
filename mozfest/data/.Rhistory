102.63/2
102.63/3
22*3
2014-1997
install.packages("MCMCglmm")
library("MCMCglmm")
vignette("Tutorial","MCMCglmm")
?MCMCglmm
vignette("Overview", "MCMCglmm")
library(foreign)
Panel <- read.dta("http://dss.princeton.edu/training/Panel101.dta")
coplot(y ~ year|country, type="l", data=Panel)
?coplot()
coplot(y ~ year|country, type="b", data=Panel)
library(foreign)
Panel <- read.dta("http://dss.princeton.edu/training/Panel101.dta")
library(car)
install.packages("car")
library(car)
scatterplot(y~year|country, boxplots=FALSE, smooth=TRUE, reg.line=FALSE, data=Panel)
.pardefault <- par(no.readonly = T)
scatterplot(y~year|country, boxplots=FALSE, smooth=TRUE, reg.line=FALSE, data=Panel)
164.20-54.73
7/21
280.03/3
280.03/3*2
900+18+30.49
948.49-93.34333
68+80+33+60+22+14+7+8
sqrt(1)
sqrt((.116*(1-.116))/34539)
.2/.002427608319856
.002/.002427608319856
.5*.5
1557.5+467.25+25
244.14/3
81.38*2
769-635-134
2015-1995
600*13
75*3
225/4
75/4
4*9
2-.25
1.75+6
WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS", start = 2005, end = 2011, extra = FALSE, cache = NULL)
librray("WDI")
library("WDI")
WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS", start = 2005, end = 2011, extra = FALSE, cache = NULL)
30*12000
4*7
35+74+180
22-7
?data()
library('mapproj')
library('ggplot2')
library('maps')
world <- map_data("world")
worldmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_path() +
scale_y_continuous(breaks=(-2:2) * 30) +
scale_x_continuous(breaks=(-4:4) * 45)
worldmap + coord_map("laue")
worldmap + coord_map("lagrange")
worldmap + coord_map("cylequalarea(lat0)")
worldmap + coord_map("cylequalarea")
worldmap + coord_map("hex")
world <- map_data("world")
worldmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_path()
worldmap
worldmap + coord_map("ortho", orientation=c(41, -74, 0))
worldmap + coord_map("conic", lat0 = 30)
library('Rworldmap')
library('rworldmap')
install.packages("rworldmap")
library('rworldmap')
data(countryExData)
sPDF <- joinCountryData2Map( countryExData
, joinCode = "ISO3"
, nameJoinColumn = "ISO3V10")
sPDF
head(sPDF)
names(sPDF)
str(sPDF)
sPDF@data[["BIOcategories"]]
sPDF@data[[]]
sPDF@data
head(sPDF@data)
View(sPDF@data)
names(sPDF@data)
7.9/4.5
627200/486400-1
1868800/518400-1
1868800/1785600-1
data.rev = searchTwitter('data+revolution',  n=5000, since='2011-03-01', until='2011-03-02',retryOnRateLimit=1)
library('twitteR')
library('httpuv')
#http://www.r-bloggers.com/getting-started-with-twitter-in-r/
#http://davetang.org/muse/2013/04/06/using-the-r_twitter-package/
setup_twitter_oauth('ByJPFNUOyfMjk9qT8AZVXLQjE', 'qd2gETJGLXuGjStCJbWUIPV78Lsyf7IlFHP8VHWwUKRkakQPGN',access_token=NULL, access_secret=NULL)
data.rev = searchTwitter('data+revolution',  n=5000, since='2011-03-01', until='2011-03-02',retryOnRateLimit=1)
data.rev = searchTwitter('#datarev',  n=5000, since='2011-03-01', until='2011-03-02',retryOnRateLimit=1)
str(mi.trap)
data.rev = searchTwitter('#datarev',  n=5000,retryOnRateLimit=1)
str(data.rev)
data.rev.text <- sapply(data.rev, function(t) t$getText())
names(data.rev) <- 'test'
data.rev.text[2]
data.rev.text.corpus <- Corpus(VectorSource(data.rev.text))
?Corpus()
head(data.rev.text)
name<-data.rev$getScreenName()
data.rev1=data.rev[[1]]
data.rev1
data.rev.text[2]
View(data.rev.text)
data.rev.text
29+28
2011-2002
library('WDI')
pov <- WDI(country='all', indicator = 'SI.POV.DDAY', start=1976, end=1976)
head(pov)
table(pov$SI.POV.DDAY, exclude = NULL)
pov <- WDI(country='all', indicator = 'SI.POV.DDAY', start=1978, end=1978)
head(pov)
table(pov$SI.POV.DDAY, exclude = NULL)
pov <- WDI(country='all', indicator = 'SI.POV.NAHC', start=1978, end=1978)
head(pov)
table(pov$SI.POV.DDAY, exclude = NULL)
table(pov$SI.POV.NAHC, exclude = NULL)
pov <- WDI(country='all', indicator = 'SI.POV.NAHC', start=1976, end=1976)
head(pov)
table(pov$SI.POV.NAHC, exclude = NULL)
pov <- WDI(country='all', indicator = 'SI.POV.NAHC', start=1978, end=1978)
head(pov)
table(pov$SI.POV.NAHC, exclude = NULL)
pov <- WDI(country='all', indicator = 'SI.POV.NAHC', start=1979, end=1979)
head(pov)
table(pov$SI.POV.NAHC, exclude = NULL)
291/5
291/8
unempl
library('WDI')
unempl <- WDI(country = c('US'), indicator = c('SL.UEM.TOTL.ZS', 'SL.UEM.TOTL.NE.ZS'), start = 1991, end = 2013)
unempl
library('WDI')
unempl <- WDI(country = c('US'), indicator = c('SL.UEM.TOTL.ZS', 'SL.UEM.TOTL.NE.ZS'), start = 1991, end = 2013)
unempl
unempl <- WDI(country = c('US'), indicator = c('SL.UEM.TOTL.ZS', 'SL.UEM.TOTL.NE.ZS'), start = 1991, end = 2014)
unempl
mean(6.6, 6.7, 6.6, 6.2, 6.3, 6.1, 6.2, 6.1, 5.9, 5.7, 5.8, 5.6)
unempl
library("foreign")
library("ggplot2")
library("RColorBrewer")
library("WDI")
library("countrycode")
library("grid")
library("ggthemes")
getwd()
wdi <- WDI(country="all", indicator = "SP.POP.TOTL", extra = T, start = 2014, end = 2014)
wdi$uncode <- countrycode(wdi$iso3c, "iso3c", "un", warn = T)
names(wdi)
wdi <- wdi[complete.cases(wdi[ ,12]), ]
wdi <- wdi[, c(10, 12)]
# load in UN population projections data (pop2012: projections from 2012 report; pop2015: projections 2015 report)
un <- read.dta("un_data.dta")
head(un)
un <- un[un$year <= 2050, ]
un <- merge(un, wdi, by.x = "Countrycode", by.y = "uncode", all.x = T)
un.2050 <- un[un$year == 2050, ]
un.2050$diff <- un.2050$pop2015 - un.2050$pop2012
sum(un.2050[un.2050$Majorarearegioncountryora=="WORLD",]$diff) # World has slightly higher 2015 estimate of 2050 population, but not super different
sum(un.2050[un.2050$Majorarearegioncountryora!="WORLD",]$diff < 0) # 116 countries/areas for which 2015 revisions give lower 2050 estimates
sum(un.2050[un.2050$Majorarearegioncountryora!="WORLD",]$diff > 0) # 117 countries/areasfor which 2015 revisions give higher 2050 estimates
# 43 high-income countries have downward revisions (only 24 have upward revisions); 78 developing (low & middle income) countries have upward revisions (only 64 have upward revisions)
tapply(un.2050$diff < 0,un.2050$income, sum)
tapply(un.2050$diff > 0,un.2050$income, sum)
## Which countries have the most discrepancy between 2012 & 2015 forecasts over the 2015-2050 period?
# regress pop2015 on pop2012 for each country & extract the R-squared stats - the ones with the lowest R2 are the ones for which the projections from the 2012 report diverge the most from the projections from the 2015 report, on average
countries <- unique(un$Majorarearegioncountryora)
R2vector <- vector(mode="numeric", length=length(countries))
for (i in 1:length(countries)) {
mod <- lm(pop2015 ~ pop2012, data = un[un$Majorarearegioncountryora == countries[i], ])
R2vector[i] <- summary(mod)$r.squared
}
R2vector <- as.data.frame(R2vector)
R2.data <- cbind(countries, R2vector)
# take a look: which ones are they?
R2.data
# okay, but some of the ones with the smallest R2 are also pretty small countries (e.g., Turks and Caicos Islands = 0.095)
R2.data.merge <- merge(R2.data, un, by.x = "countries", by.y = "Majorarearegioncountryora")
head(R2.data.merge)
str(R2.data.merge)
R2.data.merge$countries <- as.character(R2.data.merge$countries)
R2.data.order <- R2.data.merge[order(R2.data.merge$R2vector), ]
R2.data.order$countries <- ifelse(R2.data.order$countries == "R\xe9union", "Reunion",
ifelse(R2.data.order$countries == "C\xf4te d'Ivoire",
"Cote D'Ivoire", R2.data.order$countries))
R2.data.order$countries.f <- factor(R2.data.order$countries, levels = unique(R2.data.order$countries))
levels(R2.data.order$countries.f)
# This is a nice plot, but freeing the y scales is confusing
ggplot(R2.data.order[R2.data.order$countries %in% head(unique(R2.data.order[R2.data.order$pop2015 > 5000,]$countries), 20),], aes(x = year, group = countries)) +
geom_line(aes(y = pop2012), color = "red") +
geom_line(aes(y = pop2015), color = "blue") +
facet_wrap(~countries.f, scales = "free_y")
R2.data.order <- R2.data.merge[order(R2.data.merge$R2vector), ]
R2.data.merge <- merge(R2.data, un, by.x = "countries", by.y = "Majorarearegioncountryora")
R2.data <- cbind(countries, R2vector)
countries <- unique(un$Majorarearegioncountryora)
library("foreign")
library("ggplot2")
library("RColorBrewer")
library("WDI")
library("countrycode")
library("grid")
library("ggthemes")
getwd()
## Descriptive - is the 2015 revision of 2050 projections higher or lower than previous (2012) projection? How does this differ by country / income level?
# get country income classifications from world development indicators
wdi <- WDI(country="all", indicator = "SP.POP.TOTL", extra = T, start = 2014, end = 2014)
wdi$uncode <- countrycode(wdi$iso3c, "iso3c", "un", warn = T)
names(wdi)
wdi <- wdi[complete.cases(wdi[ ,12]), ]
wdi <- wdi[, c(10, 12)]
# load in UN population projections data (pop2012: projections from 2012 report; pop2015: projections 2015 report)
un <- read.dta("un_data.dta")
head(un)
un <- un[un$year <= 2050, ]
un <- merge(un, wdi, by.x = "Countrycode", by.y = "uncode", all.x = T)
un.2050 <- un[un$year == 2050, ]
un.2050$diff <- un.2050$pop2015 - un.2050$pop2012
sum(un.2050[un.2050$Majorarearegioncountryora=="WORLD",]$diff) # World has slightly higher 2015 estimate of 2050 population, but not super different
sum(un.2050[un.2050$Majorarearegioncountryora!="WORLD",]$diff < 0) # 116 countries/areas for which 2015 revisions give lower 2050 estimates
sum(un.2050[un.2050$Majorarearegioncountryora!="WORLD",]$diff > 0) # 117 countries/areasfor which 2015 revisions give higher 2050 estimates
# 43 high-income countries have downward revisions (only 24 have upward revisions); 78 developing (low & middle income) countries have upward revisions (only 64 have upward revisions)
tapply(un.2050$diff < 0,un.2050$income, sum)
tapply(un.2050$diff > 0,un.2050$income, sum)
library(ggplot2)
library(RColorBrewer)
library(WDI)
WDIsearch("mortality")
mort <- WDI(country = 'all', indicator = c('SH.DYN.MORT'), start = 1990, end = 2013, extra = T)
table(mort$income)
table(mort$income)
#View(mort[mort$country == 'High income: OECD', ] ) #OECD avg = 5.129518 in 2013
mort<- mort[ mort$income == 'High income: OECD', ]
mort$mark <- ifelse(mort$iso3c == 'USA', 1,
0
)
mort$mark <- as.factor(mort$mark)
ggplot(mort, aes(x = year, y = SH.DYN.MORT, group = country)) +
geom_line(aes(color = mark, size = mark)) +
scale_color_manual(values = c('grey', 'blue')) +
scale_x_continuous(breaks = c(1990, 2013)) +
scale_size_manual(values = c(.8,1)) +
labs(x = "", y = "") +
theme(legend.position = 'none', panel.background = element_blank(), panel.grid = element_blank(), plot.title = element_text(size = 11))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("~/Desktop/")
setwd("~/Desktop/visual/twitter/data")
list.files()
dat <- read.csv("Sheet 3-Table 1.csv")
dat
library(reshape2)
dat.m <- melt(dat)
dat.m
dat <- read.csv("Sheet 1-Table 1.csv")
dat.m <- melt(dat)
dat.m
setwd("~/Desktop/visual/twitter/d")
list.files()
dat <- read.csv("Sheet 1-Table 1.csv")
dat.m <- melt(dat)
dat.m
setwd("~/Desktop/visual/twitter/data")
list.files()
dat <- read.csv("Sheet 1-Table 3.csv")
setwd("~/Desktop/visual/twitter/data")
list.files()
dat <- read.csv("Sheet 3-Table 1.csv")
dat.m <- melt(dat)
dat.m
dat.m <- melt(dat)
dat <- read.csv("Sheet 3-Table 1.csv")
dat
names(dat)
dat <- dat[, 1:8]
dat
dat.m <- melt(dat)
dat.m
dat.m$account <- gsub("X.", "@", dat.m$variable)
dat.m
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account)
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_x')
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y')
str(dat.,)
str(dat.m)
dat.m$date <- as.character(dat.m$date)
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y')
str(dat.m)
ggplot(dat.m, aes(x = as.numeric(date), y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y')
table(dat.m$date)
setwd("~/Desktop/visual/twitter/data")
list.files()
dat <- read.csv("Sheet 3-Table 1.csv")
dat <- dat[, 1:8]
dat.m <- melt(dat)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
table(dat.m$date)
levels(dat.m$date)
?relevel()
relevel(dat.m$date, ref = '5 Nov')
dat.m$date <- relevel(dat.m$date, ref = '5 Nov')
levels(dat.m$date)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
levels(dat.m$date)
dat.m$date <- relevel(dat.m$date, ref = '4 Nov')
dat.m$date <- as.character(dat.m$date)
levels(dat.m$date)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
levels(dat.m$date)
dat <- read.csv("Sheet 3-Table 1.csv")
dat <- dat[, 1:8]
dat.m <- melt(dat)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
levels(dat.m$date)
dat.m$date <- relevel(dat.m$date, ref = '4 Nov')
levels(dat.m$date)
?levels()
dat <- read.csv("Sheet 3-Table 1.csv")
dat <- dat[, 1:8]
dat.m <- melt(dat)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
levels(dat.m$date)
levels(dat.m$date) <- c('4 Nov', '5 Nov', '6 Nov', '7 Nov', '8 Nov', '9 Nov', '10 Nov', '11 Nov')
ggplot(dat.m, aes(x = date, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y')
dat <- read.csv("Sheet 3-Table 1.csv")
dat <- dat[, 1:8]
dat.m <- melt(dat)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
levels(dat.m$date)
levels(dat.m$date) <- c('4 Nov', '5 Nov', '6 Nov', '7 Nov', '8 Nov', '9 Nov', '10 Nov', '11 Nov')
head(dat.m)
View(dat.m)
dat <- read.csv("Sheet 3-Table 1.csv")
dat <- dat[, 1:8]
dat.m <- melt(dat)
dat.m$account <- gsub("X.", "@", dat.m$variable)
str(dat.m)
View(dat.m)
levels(dat.m$date)
?reorder()
relevel()
dat.m$date.order <- factor(dat.m$date, levels =c('4 Nov', '5 Nov', '6 Nov', '7 Nov', '8 Nov', '9 Nov', '10 Nov', '11 Nov'))
head(dat.m)
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y')
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y') +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_grid(.~account, scales = 'free_y') +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_grid(account~., scales = 'free_y') +
theme_bw()
?facet_wrap()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=1) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=2) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=7) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=7, ncol=2) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=7) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=4, ncol=2) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=1) +
theme_bw()
ggplot(dat.m, aes(x = date.order, y = value, group = account)) +
geom_line(aes(color = account)) +
facet_wrap(~account, scales = 'free_y', nrow=7) +
theme_bw() +
theme(panel.margin = unit(2, "lines"), strip.background = element_blank(), panel.background = element_rect(fill = "white"), plot.background = element_rect(fill = "white"), panel.grid.major = element_line(color = 'gray90', size = .3), strip.text.x = element_text( size = 14), axis.text = element_text(color = 'gray47'))
library(scales)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
34999-20000
